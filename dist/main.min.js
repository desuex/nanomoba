(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"/home/nnm/www-data/nanomoba/src/js/entities/player.js":[function(require,module,exports){
var Player = function (game, x, y, sprite) {
    Phaser.Sprite.call(this, game, x, y, sprite);
    game.add.existing(this);
}

Player.prototype = Object.create(Phaser.Sprite.prototype);
Player.prototype.constructor = Player;

/**
 * Automatically called by World.update
 */
Player.prototype.update = function() {
};

module.exports = Player;

},{}],"/home/nnm/www-data/nanomoba/src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(800, 600, Phaser.AUTO, 'nanomoba-game');

window.Utils = require('./utils');
window.playerState = {
    currentLevel: 'Game'
}

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./states/boot":"/home/nnm/www-data/nanomoba/src/js/states/boot.js","./states/game":"/home/nnm/www-data/nanomoba/src/js/states/game.js","./states/menu":"/home/nnm/www-data/nanomoba/src/js/states/menu.js","./states/preloader":"/home/nnm/www-data/nanomoba/src/js/states/preloader.js","./states/splash":"/home/nnm/www-data/nanomoba/src/js/states/splash.js","./utils":"/home/nnm/www-data/nanomoba/src/js/utils.js"}],"/home/nnm/www-data/nanomoba/src/js/states/boot.js":[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;

    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.minWidth =  480;
      this.game.scale.minHeight = 260;
      this.game.scale.maxWidth = 640;
      this.game.scale.maxHeight = 480;
      this.game.scale.forceLandscape = true;
      this.game.scale.pageAlignHorizontally = true;
      this.game.scale.setScreenSize(true);
    }

    this.game.state.start('Preloader');
  }
};

},{}],"/home/nnm/www-data/nanomoba/src/js/states/game.js":[function(require,module,exports){
var Player = require('../entities/player');
var Terrain = require('../terrain/terrain');

var Game = function () {
  this.testentity = null;
};

module.exports = Game;

Game.prototype = {

  create: function () {
    //var x = (this.game.width / 2) - 100;
    //var y = (this.game.height / 2) - 50;
    this.terrain =new Terrain(this.game,0,0,'terrain');
    this.green=new Player(this.game,100,100,'player_green');
    this.blue=new Player(this.game,100,200,'player_blue');
    this.magenta=new Player(this.game,100,300,'player_magenta');
    this.yellow=new Player(this.game,100,400,'player_yellow');
    this.orange=new Player(this.game,100,500,'player_orange');
    //this.testentity.anchor.setTo(0.5, 0.5);

    this.input.onDown.add(this.onInputDown, this);
  },

  update: function () {
    var x, y, cx, cy, dx, dy, angle, scale;

    //x = this.input.position.x;
    //y = this.input.position.y;
    //cx = this.world.centerX;
    //cy = this.world.centerY;

    //angle = Math.atan2(y - cy, x - cx) * (180 / Math.PI);
    //this.testentity.angle = angle;

    //dx = x - cx;
    //dy = y - cy;
    //scale = Math.sqrt(dx * dx + dy * dy) / 100;
    this.terrain.position.x=this.input.position.x-1000;
    this.terrain.position.y=this.input.position.y-1000;
    //this.testentity.scale.x = scale * 0.6;
    //this.testentity.scale.y = scale * 0.6;
  },

  onInputDown: function () {
    //this.game.state.start('Menu');
  }
};

},{"../entities/player":"/home/nnm/www-data/nanomoba/src/js/entities/player.js","../terrain/terrain":"/home/nnm/www-data/nanomoba/src/js/terrain/terrain.js"}],"/home/nnm/www-data/nanomoba/src/js/states/menu.js":[function(require,module,exports){
var Menu = function () {
  this.text = null;
};

module.exports = Menu;

Menu.prototype = {

  create: function () {
    var x = this.game.width / 2;
    var y = this.game.height / 2;

    var style = { font: "65px Arial", fill: "#ffffff", align: "center" };

    this.text = this.add.text(x - 300, y - 200, "Press to Start", style);

    this.input.onDown.add(this.onDown, this);
  },

  update: function () {
  },

  onDown: function () {
    this.game.state.start(playerState.currentLevel);
  }
};

},{}],"/home/nnm/www-data/nanomoba/src/js/states/preloader.js":[function(require,module,exports){
var Preloader = function (game) {
    this.asset = null;
    this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

    preload: function () {
        this.asset = this.add.sprite(320, 240, 'preloader');
        this.asset.anchor.setTo(0.5, 0.5);

        this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
        this.load.setPreloadSprite(this.asset);
        this.load.image('testsprite', 'assets/test.png');
        this.load.image('contra2', 'assets/pics/contra2.png');
        this.load.image('bunny', 'assets/sprites/bunny.png');
        this.load.image('block', 'assets/sprites/block.png');
        this.load.image('wizball', 'assets/sprites/wizball.png');
        this.load.image('asuna_by_vali233', 'assets/sprites/asuna_by_vali233.png');
        this.load.image('terrain','assets/terrain/map.jpg');
        this.load.image('player_blue', 'assets/sprites/player_blue.png');
        this.load.image('player_green', 'assets/sprites/player_green.png');
        this.load.image('player_magenta', 'assets/sprites/player_magenta.png');
        this.load.image('player_orange', 'assets/sprites/player_orange.png');
        this.load.image('player_yellow', 'assets/sprites/player_yellow.png');

        this.load.physics('physicsData', 'assets/physics/sprites.json');
    },

    create: function () {
        this.asset.cropEnabled = false;
    },

    update: function () {
        if (!!this.ready) {
            this.game.state.start('Menu');
        }
    },

    onLoadComplete: function () {
        this.ready = true;
    }
};

},{}],"/home/nnm/www-data/nanomoba/src/js/states/splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"/home/nnm/www-data/nanomoba/src/js/terrain/terrain.js":[function(require,module,exports){
var Terrain = function (game, x, y, sprite) {
    Phaser.Sprite.call(this, game, x, y, sprite);
    game.add.existing(this);
};

Terrain.prototype = Object.create(Phaser.Sprite.prototype);
Terrain.prototype.constructor = Terrain;

/**
 * Automatically called by World.update
 */
Terrain.prototype.update = function() {
};

module.exports = Terrain;

},{}],"/home/nnm/www-data/nanomoba/src/js/utils.js":[function(require,module,exports){
var Utils = {
    containsObject: function(obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i] === obj) {
                return true;
            }
        }

        return false;
    }
};

module.exports = Utils;
},{}]},{},["/home/nnm/www-data/nanomoba/src/js/main.js"])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
